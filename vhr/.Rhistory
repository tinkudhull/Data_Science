tbmodel = train(Status~., data = train_leave1, method = "treebag", trControl = fitcontrol)
tbmodel = train(Status~., data = train_leave1, method = "treebag", trControl = fitcontrol)
pred1 = predict(tbmodel, test_leave1[,-8])
library(pROC)
auc = roc(test_leave1$Status, pred1)
head(pred1)
table(test_leave1$Status, pred1)
fitcontrol = trainControl(method = "cv", number = 10)
tbmodel = train(Status~., data = train_leave1, method = "treebag", trControl = fitcontrol)
pred1 = predict(tbmodel, test_leave1[,-8])
table(test_leave1$Status, pred1)
str(test_leave1)
pred1 = predict(tbmodel, test_leave1[,-4])
table(test_leave1$Status, pred1)
str(test_leave1)
tbmodel2 = train(Status~., data = train_leave2, method = "treebag", trControl = fitcontrol)
pred2 = predict(tbmodel2, test_leave1[,-4])
table(test_leave1$Status, pred2)
pred2 = predict(tbmodel2, test_leave1[,-4], type = "prob")
head(pred2)
pred1 = predict(tbmodel, test_leave1[,-4], type = "prob")
library(pROC)
auc = roc(test_leave1$Status, pred1)
auc = roc(test_leave1$Status, pred1[,1])
print(auc)
plot(auc)
auc = roc(test_leave1$Status, pred2[,1])
print(auc)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 100, perc.under = 200)
table(train_leave2$Status)
tbmodel2 = train(Status~., data = train_leave2, method = "treebag", trControl = fitcontrol)
pred2 = predict(tbmodel2, test_leave1[,-4], type = "prob")
auc = roc(test_leave1$Status, pred2[,1])
print(auc)
plot(auc)
plot(auc)
auc = roc(test_leave1$Status, pred1[,1])
print(auc)
plot(auc)
plot(auc2)
auc2 = roc(test_leave1$Status, pred2[,1])
print(auc2)
plot(auc2)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 200, perc.under = 200)
table(train_leave2$Status)
tbmodel2 = train(Status~., data = train_leave2, method = "treebag", trControl = fitcontrol)
pred2 = predict(tbmodel2, test_leave1[,-4], type = "prob")
auc2 = roc(test_leave1$Status, pred2[,1])
print(auc2)
plot(auc2)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 200, perc.under = 300)
table(train_leave2$Status)
tbmodel2 = train(Status~., data = train_leave2, method = "treebag", trControl = fitcontrol)
pred2 = predict(tbmodel2, test_leave1[,-4], type = "prob")
auc2 = roc(test_leave1$Status, pred2[,1])
print(auc2)
plot(auc2)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 200, perc.under = 200)
table(train_leave2$Status)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 300, perc.under = 200)
table(train_leave2$Status)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 300, perc.under = 300)
table(train_leave2$Status)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 300, perc.under = 150)
table(train_leave2$Status)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 300, perc.under = 100)
table(train_leave2$Status)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 300, perc.under = 150)
table(train_leave2$Status)
tbmodel2 = train(Status~., data = train_leave2, method = "treebag", trControl = fitcontrol)
pred2 = predict(tbmodel2, test_leave1[,-4], type = "prob")
auc2 = roc(test_leave1$Status, pred2[,1])
print(auc2)
plot(auc2)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 100, perc.under = 150)
table(train_leave2$Status)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 100, perc.under = 200)
table(train_leave2$Status)
table(train_leave1$Status)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 100, perc.under = 100)
table(train_leave2$Status)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 100, perc.under = 250)
table(train_leave2$Status)
tbmodel2 = train(Status~., data = train_leave2, method = "treebag", trControl = fitcontrol)
pred2 = predict(tbmodel2, test_leave1[,-4], type = "prob")
auc2 = roc(test_leave1$Status, pred2[,1])
print(auc2)
plot(auc2)
pred22 = predict(tbmodel2, test_leave1[,-4])
table(test_leave1$Status, pred22)
table(train_leave1$Status)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 100)
table(train_leave2$Status)
str(test_leave1)
str(train_leave1)
table(train_leave1$Status)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 100, perc.under = 300)
table(train_leave2$Status)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 100, perc.under = 400)
table(train_leave2$Status)
tbmodel2 = train(Status~., data = train_leave2, method = "treebag", trControl = fitcontrol)
pred2 = predict(tbmodel2, test_leave1[,-4], type = "prob")
auc2 = roc(test_leave1$Status, pred2[,1])
print(auc2)
plot(auc2)
auc2 = roc(test_leave1$Status, pred2[,2])
print(auc2)
plot(auc2)
table(train_leave2$Status)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 100, perc.under = 380)
table(train_leave2$Status)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 100, perc.under = 390)
table(train_leave2$Status)
table(train_leave1$Status)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 100, perc.under = 393)
table(train_leave2$Status)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 50, perc.under = 393)
table(train_leave2$Status)
tbmodel2 = train(Status~., data = train_leave2, method = "treebag", trControl = fitcontrol)
pred2 = predict(tbmodel2, test_leave1[,-4], type = "prob")
auc2 = roc(test_leave1$Status, pred2[,1])
print(auc2)
plot(auc2)
table(train_leave2$Status)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 50, perc.under = 393)
table(train_leave2$Status)
str(train_leave1)
train_leave1 = train_leave[,c(5,6,7,8,12,13,14)]
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 50, perc.under = 393)
table(train_leave2$Status)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 50, perc.under = 200)
table(train_leave2$Status)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 50, perc.under = 400)
table(train_leave2$Status)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 50, perc.under = 800)
table(train_leave2$Status)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 50, perc.under = 780)
table(train_leave2$Status)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 50, perc.under = 790)
table(train_leave2$Status)
train_leave2 = SMOTE(Status~., data = train_leave1, perc.over = 50, perc.under = 785)
table(train_leave2$Status)
tbmodel2 = train(Status~., data = train_leave2, method = "treebag", trControl = fitcontrol)
pred2 = predict(tbmodel2, test_leave1[,-4], type = "prob")
auc2 = roc(test_leave1$Status, pred2[,1])
print(auc2)
plot(auc2)
tbmodel = train(Status~., data = train_leave1, method = "treebag", trControl = fitcontrol)
pred1 = predict(tbmodel, test_leave1[,-4], type = "prob")
library(pROC)
auc = roc(test_leave1$Status, pred1[,1])
print(auc)
plot(auc)
pred2 = predict(tbmodel, test_leave1[,-4])
table(test_leave1$Status, pred2)
(252+23)/(252+23+28+49)
table(test_leave1$Status, pred1>0.4)
table(test_leave1$Status, pred1[,1]>0.4)
table(test_leave1$Status, pred1[,2]>0.4)
table(test_leave1$Status, pred2 )
str(train_leave1)
str(test_leave1)
library(data.table)
df = data.table(train_leave1, keep.rownames = F)
dff =data.table(test_leave1, keep.rownames = F)
library(Matrix)
sparse_matrix = sparse.model.matrix(Status~., data = df)
sparse_matrixx =sparse.model.matrix(Status~., data = dff)
output = df$Status
library(xgboost)
?xgboost
?xgb.cv
bstt = xgboost(data = sparse_matrix, label = output, eta =1,  nrounds =100 ,
objective = "binary:logistic", metrics = "auc")
train_leave2 = train_leave1
train_leave2$Status = ifelse(train_leave2$Status=="Approved",1,0)
str(train_leave2)
test_leave2 = test_leave1
test_leave2$Status = ifelse(test_leave2$Status == "Approved",1,0)
df = data.table(train_leave2, keep.rownames = F)
dff =data.table(test_leave2, keep.rownames = F)
library(Matrix)
sparse_matrix = sparse.model.matrix(Status~., data = df)
sparse_matrixx =sparse.model.matrix(Status~., data = dff)
output = df$Status
library(xgboost)
?xgb.cv
bstt = xgboost(data = sparse_matrix, label = output, eta =1,  nrounds =100 ,
objective = "binary:logistic", metrics = "auc")
bsttt = xgb.cv(params = list(eta = 1, objective = "binary:logistic", metrics ="auc"),
data =sparse_matrix,
label = output,
nrounds = 100,
nfold = 10,
verbose = T)
bsttt = xgb.cv(params = list(eta = 0.5, objective = "binary:logistic", metrics ="auc"),
data =sparse_matrix,
label = output,
nrounds = 100,
nfold = 10,
verbose = T)
bstt = xgboost(data = sparse_matrix, label = output, eta =0.5,  nrounds =10 ,
objective = "binary:logistic", metrics = "auc")
head(bstt)
pred = predict(bstt, newdata = sparse_matrixx)
head(pred)
library(pROC)
aucc = roc(test_leave2$Status, pred)
plot(aucc)
print(aucc)
table(test_leave2$Status, pred > 0.5)
(263+16)/(263+16+56+17)
table(test_leave2$Status, pred > 0.55)
table(test_leave2$Status, pred > 0.6)
(257+25)/(263+16+56+17)
table(test_leave2$Status, pred > 0.65)
table(test_leave2$Status)
table(test_leave2$Status, pred > 0.7)
table(test_leave2$Status, pred > 0.68)
(226+40)/(263+16+56+17)
table(test_leave2$Status, pred > 0.65)
(236+36)/(263+16+56+17)
table(test_leave2$Status, pred > 0.6)
(257+25)/(263+16+56+17)
table(test_leave2$Status, pred > 0.55)
table(test_leave2$Status, pred > 0.55)
bstt
summary(bstt)
bsttt = xgb.cv(params = list(eta = 0.5, objective = "binary:logistic", metrics ="auc"),
data =sparse_matrix,
label = output,
nrounds = 10,
nfold = 10,
verbose = T)
bsttt = xgb.cv(params = list(eta = 0.1, objective = "binary:logistic", metrics ="auc"),
data =sparse_matrix,
label = output,
nrounds = 50,
nfold = 10,
verbose = T)
bsttt = xgb.cv(params = list(eta = 0.05, objective = "binary:logistic", metrics ="auc"),
data =sparse_matrix,
label = output,
nrounds = 50,
nfold = 10,
verbose = T)
bsttt = xgb.cv(params = list(eta = 0.05, objective = "binary:logistic", metrics ="auc"),
data =sparse_matrix,
label = output,
nrounds = 22,
nfold = 10,
verbose = T)
bstt = xgboost(data = sparse_matrix, label = output, eta =0.05,  nrounds =22 ,    $0.1,10
objective = "binary:logistic", metrics = "auc")
bstt = xgboost(data = sparse_matrix, label = output, eta =0.05,  nrounds =22 ,    #0.1,10
objective = "binary:logistic", metrics = "auc")
pred = predict(bstt, newdata = sparse_matrixx)
head(pred)
library(pROC)
aucc = roc(test_leave2$Status, pred)
plot(aucc)
print(aucc)
table(test_leave2$Status, pred > 0.55)
(257+20)/(257+20+52+23)
table(test_leave2$Status, pred > 0.6)
table(test_leave2$Status, pred > 0.5)
model_glm = glm(Status~., data = train_leave2, family = "binomial")
summary(model_glm)
predi = predict(model_glm, newdata = test_leave2)
combin = rbind(train_leave2, test_leave2)
str(combin)
table(combin$Designation)
table(combin$Department)
combin$Designation = as.factor(as.character(combin$Designation))
combin1 = combin[c(1:nrow(train_leave2)),]
combin2 = combin[-c(1:nrow(train_leave2)),]
model_glm = glm(Status~., data =combin1, family = "binomial")
predi = predict(model_glm, newdata = combin2)
str(leave)
table(leave$Designation)
table(leave$Designation, leave$Status)
table(leave$Department, leave$Status)
table(leave$Designation, leave$Status)
getwd()
leave = read.csv("Leave_Report2.csv")
mm = duplicated(leave)
table(mm)
leave = leave[!duplicated(leave),]
table(leave$Status)
str(leave)
leave = subset(leave, leave$Status != "Pending")
str(leave)
table(leave$Leave_Type, leave$Status)
prop.table(table(leave$Leave_Type, leave$Status), margin = 1)*100
leave$Status = as.factor(as.character(leave$Status))
prop.table(table(leave$Leave_Type, leave$Status), margin = 1)*100
table(leave$Leave_Type, leave$Status)
table(leave$Designation, leave$Status)
leave$Designation = as.factor(as.character(leave$Designation))
table(leave$Designation, leave$Status)
str(leave)
model_glm = glm(Status~Designation+Department+Location+Reason_for_leave+No_of_Leaves+Leave_Type,
data = leave, family = "binomial")
summary(model_glm)
predi = predict(model_glm, type = "response")
head(predi)
str(leave)
table(leave$Status, predi < 0.5)
table(leave$Status, predi > 0.5)
(1088+80)/(1088+80+32+206)
table(leave$Status, predi > 0.5)
library(pROC)
auc = roc(leave$Status, predi)
plot(auc)
print(auc)
table(leave$Status, predi > 0.55)
table(leave$Status, predi > 0.45)
table(leave$Status, predi > 0.40)
(1023+129)/(1023+129+97+157)
str(leave)
str(leave)
leave2 = leave[,c(5:8,12:14)]
str(leave2)
table(leave2$Designation, leave2$Department)
table(leave2$Designation, leave2$Status)
leave3 = subset(leave2, leave2$Designation == c("AVP","Forex Intern","Forex Trader","Intern",
"Manager BPM","Product Development Intern",
"Sr Specialist BPM","Trainee Dealer"))
str(leave3)
leave3 = subset(leave2, leave2$Designation == "AVP"
|leave2$Designation =="Forex Intern"
|leave2$Designation =="Forex Trader"
|leave2$Designation =="Intern"
|leave2$Designation =="Manager BPM"
|leave2$Designation =="Product Development Intern"
|leave2$Designation =="Sr Specialist BPM"
|leave2$Designation =="Trainee Dealer")
str(leave3)
str(leave2)
table(leave2$Designation, leave2$Status)
31+643+16+49+7+7+8+324
1085+6+57+12+3+1+1+197
str(leave3)
table(leave3$Department, leave3$Status)
leave4 = subset(leave3, leave3$Department == "Business Process Management"
| leave3$Department == "Finance"
| leave3$Department == "Not Available"
| leave3$Department == "null"
| leave3$Department == "Tech Infra")
str(leave4)
table(leave4$Location, leave4$Status)
table(leave4$Reason_for_leave, leave4$Status)
str(leave4)
table(leave4$No_of_Leaves, leave4$Status)
boxplot(leave4$No_of_Leaves)
model_glm2 = glm(Status~Designation+Department+Location+Reason_for_leave+No_of_Leaves+Leave_Type,
data = leave4, family = "binomial")
summary(model_glm2)
predii = predict(model_glm2, type = "response")
head(predii)
aucc = roc(leave4$Status, predii)
plot(aucc)
print(aucc)
table(leave4$Status)
table(leave4$Status, predii>0.5)
(1044+77)/(nrow(leave4))
table(leave4$Status, predii>0.45)
(1021+92)/(nrow(leave4))
table(leave4$Status, predii>0.48)
table(leave4$Status, predii>0.55)
table(leave4$Status)
summary(model_glm2)
head(predii)
print(aucc)
print(auc)
summary(model_glm2)
head(predii)
View(leave4)
0.3965+0.8619+0.7792+0.444+0.4158
predii[45:60]
predii[450:460]
predii[1:100]
table(leave4$Status, predii>0.55)
table(leave4$Status, predii>0.45)
View(leave4)
-0.3965-1.077+1.822-0.8842-0.5362-0.111+2.365
table(leave4$Status, predii>0.45)
(1021+92)/(nrow(leave4))
table(leave4$Status, leave4$Leave_Type)
table(leave4$Leave_Type,leave4$Status)
prop.table(table(leave4$Leave_Type,leave4$Status), margin = 1)*100
getwd()
getwd()
leave = read.csv("Leave_Report2.csv")
mm = duplicated(leave)
table(mm)
leave = leave[!duplicated(leave),]
str(leave)
leave = subset(leave, leave$Status != "Pending")
leave$Status = as.factor(as.character(leave$Status))
str(leave)
table(leave$Status)
leave = read.csv("Leave_Report2.csv")
table(leave$Status)
mm = duplicated(leave)
table(mm)
leave = leave[!duplicated(leave),]
str(leave)
table(leave$Status)
leave$Status = as.factor(as.character(leave$Status))
table(leave$Status)
leave = subset(leave, leave$Status != "Pending")
leave$Status = as.factor(as.character(leave$Status))
table(leave$Status)
str(leave)
prop.table(table(leave$Leave_Type, leave$Status), margin = 1)*100
prop.table(table(leave$Reason_for_leave, leave$Status), margin = 1)*100
str(leave)
leave2 = leave[,c(5:8,12:14)]
str(leave2)
table(leave2$Designation, leave2$Status)
leave3 = subset(leave2, leave2$Designation == "AVP"
|leave2$Designation =="Forex Intern"
|leave2$Designation =="Forex Trader"
|leave2$Designation =="Intern"
|leave2$Designation =="Manager BPM"
|leave2$Designation =="Product Development Intern"
|leave2$Designation =="Sr Specialist BPM"
|leave2$Designation =="Trainee Dealer")
str(leave3)
leave3$Designation = as.factor(as.character(leave3$Designation))
str(leave3)
table(leave3$Department, leave3$Status)
leave4 = subset(leave3, leave3$Department == "Business Process Management"
| leave3$Department == "Finance"
| leave3$Department == "Not Available"
| leave3$Department == "null"
| leave3$Department == "Tech Infra")
str(leave4)
leave4$Department = as.factor(as.character(leave4$Department))
str(leave4)
table(leave4$Location, leave4$Status)
table(leave4$Reason_for_leave, leave4$Status)
table(leave4$No_of_Leaves, leave4$Status)
boxplot(leave4$No_of_Leaves)
model_glm2 = glm(Status~Designation+Department+Location+Reason_for_leave+No_of_Leaves+Leave_Type,
data = leave4, family = "binomial")
summary(model_glm2)
predii = predict(model_glm2, type = "response")
predii[1:100]
table(leave4$Status, predii>0.45)
table(leave4$Status)
1080+276
model_glm2 = glm(Status~Designation+Department+Location+No_of_Leaves+Leave_Type,
data = leave4, family = "binomial")
summary(model_glm2)
predii = predict(model_glm2, type = "response")
predii[1:100]
table(leave4$Status, predii>0.45)
1058+58
1021+92
table(leave4$Status, predii>0.5)
table(leave4$Status, predii>0.4)
919+149
table(leave4$Status, predii>0.45)
table(leave4$Status, predii>0.44)
table(leave4$Status, predii>0.43)
table(leave4$Status, predii>0.42)
table(leave4$Status, predii>0.425)
table(leave4$Status, predii>0.421)
table(leave4$Status, predii>0.422)
1021/1080
model_glm2 = glm(Status~Designation+Department+Location+Reason_for_leave+No_of_Leaves+Leave_Type,
data = leave4, family = "binomial")
summary(model_glm2)
predii = predict(model_glm2, type = "response")
predii[1:100]
table(leave4$Status, predii>0.45)
table(leave4$Status, predii>0.4)
table(leave4$Status, predii>0.35)
table(leave4$Status, predii>0.43)
plot(aucc)
print(aucc)
aucc = roc(leave4$Status, predii)
library(pROC)
aucc = roc(leave4$Status, predii)
plot(aucc)
print(aucc)
1021+92
1113/nrow(leave4)
table(leave4$Status, predii>0.43)
1007+100
1107/nrow(leave4)
table(leave4$Status, predii>0.42)
989+117
table(leave4$Status, predii>0.415)
table(leave4$Status, predii>0.41)
table(leave4$Status, predii>0.40)
table(leave4$Status, predii>0.39)
table(leave4$Status, predii>0.38)
(932+152)/nrow(leave4)
932/10.80
152/2.76
table(leave4$Status, predii>0.385)
964/10.80
134/2.76
(964+134)/nrow(leave4)
(964+134)/nrow(leave4)*100
aucc = roc(leave4$Status, predii)
plot(aucc)
print(aucc)
summary(model_glm2)
